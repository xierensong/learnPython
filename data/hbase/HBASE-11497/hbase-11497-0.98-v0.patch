diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/MultipleQueueRpcExecutor.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/MultipleQueueRpcExecutor.java
index ab14906..f02719e 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/MultipleQueueRpcExecutor.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/MultipleQueueRpcExecutor.java
@@ -38,7 +38,7 @@ import com.google.common.collect.Lists;
  * RPC Executor that dispatch the requests on multiple queues.
  * Each handler has its own queue and there is no stealing.
  */
-@InterfaceAudience.Private
+@InterfaceAudience.LimitedPrivate({ "Coprocessor", "Phoenix" })
 @InterfaceStability.Evolving
 public class MultipleQueueRpcExecutor extends RpcExecutor {
   protected final List<BlockingQueue<CallRunner>> queues;
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RWQueueRpcExecutor.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RWQueueRpcExecutor.java
index 1eb1a22..6ffb2de 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RWQueueRpcExecutor.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RWQueueRpcExecutor.java
@@ -44,7 +44,7 @@ import com.google.protobuf.Message;
  * RPC Executor that uses different queues for reads and writes.
  * Each handler has its own queue and there is no stealing.
  */
-@InterfaceAudience.Private
+@InterfaceAudience.LimitedPrivate({ "Coprocessor", "Phoenix" })
 @InterfaceStability.Evolving
 public class RWQueueRpcExecutor extends RpcExecutor {
   private static final Log LOG = LogFactory.getLog(RWQueueRpcExecutor.class);
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcScheduler.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcScheduler.java
index fcf80b8..1e52ca3 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcScheduler.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcScheduler.java
@@ -26,7 +26,7 @@ import java.net.InetSocketAddress;
 /**
  * An interface for RPC request scheduling algorithm.
  */
-@InterfaceAudience.Private
+@InterfaceAudience.LimitedPrivate({ "Coprocessor", "Phoenix" })
 @InterfaceStability.Evolving
 public interface RpcScheduler {
 
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java
index 3119bad..c0ae896 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcServer.java
@@ -143,7 +143,7 @@ import com.google.protobuf.TextFormat;
  *
  * @see RpcClient
  */
-@InterfaceAudience.Private
+@InterfaceAudience.LimitedPrivate({ "Coprocessor", "Phoenix" })
 public class RpcServer implements RpcServerInterface {
   // The logging package is deliberately outside of standard o.a.h.h package so it is not on
   // by default.
@@ -265,11 +265,11 @@ public class RpcServer implements RpcServerInterface {
    * Datastructure that holds all necessary to a method invocation and then afterward, carries
    * the result.
    */
-  class Call implements RpcCallContext {
+  public class Call implements RpcCallContext {
     protected int id;                             // the client's call id
     protected BlockingService service;
     protected MethodDescriptor md;
-    protected RequestHeader header;
+    public RequestHeader header;
     protected Message param;                      // the parameter passed
     // Optional cell data passed outside of protobufs.
     protected CellScanner cellScanner;
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java
index 2c5cc8f..1af9bb6 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SimpleRpcScheduler.java
@@ -36,7 +36,7 @@ import com.google.common.collect.Lists;
  * A scheduler that maintains isolated handler pools for general, high-priority and replication
  * requests.
  */
-@InterfaceAudience.Private
+@InterfaceAudience.LimitedPrivate({ "Coprocessor", "Phoenix" })
 @InterfaceStability.Evolving
 public class SimpleRpcScheduler implements RpcScheduler {
   public static final Log LOG = LogFactory.getLog(SimpleRpcScheduler.class);
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SingleQueueRpcExecutor.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SingleQueueRpcExecutor.java
index f195e0d..693ef51 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SingleQueueRpcExecutor.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/SingleQueueRpcExecutor.java
@@ -36,7 +36,7 @@ import com.google.common.collect.Lists;
 /**
  * RPC Executor that uses a single queue for all the requests.
  */
-@InterfaceAudience.Private
+@InterfaceAudience.LimitedPrivate({ "Coprocessor", "Phoenix" })
 @InterfaceStability.Evolving
 public class SingleQueueRpcExecutor extends RpcExecutor {
   private final BlockingQueue<CallRunner> queue;
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SimpleRpcSchedulerFactory.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SimpleRpcSchedulerFactory.java
index 03a75ba..b7d77b4 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SimpleRpcSchedulerFactory.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/SimpleRpcSchedulerFactory.java
@@ -17,13 +17,17 @@
  */
 package org.apache.hadoop.hbase.regionserver;
 
+import org.apache.hadoop.classification.InterfaceAudience;
+import org.apache.hadoop.classification.InterfaceStability;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hbase.HConstants;
 import org.apache.hadoop.hbase.ipc.RpcScheduler;
 import org.apache.hadoop.hbase.ipc.SimpleRpcScheduler;
 
 /** Constructs a {@link SimpleRpcScheduler}. for the region server. */
-class SimpleRpcSchedulerFactory implements RpcSchedulerFactory {
+@InterfaceAudience.LimitedPrivate({ "Coprocessor", "Phoenix" })
+@InterfaceStability.Evolving
+public class SimpleRpcSchedulerFactory implements RpcSchedulerFactory {
 
   @Override
   public RpcScheduler create(Configuration conf, RegionServerServices server) {
