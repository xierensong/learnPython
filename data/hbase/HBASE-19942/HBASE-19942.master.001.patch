From cb4bcd5ca19e8b2d7bb3e959a24373017facc202 Mon Sep 17 00:00:00 2001
From: Guanghao Zhang <zghao@apache.org>
Date: Tue, 6 Feb 2018 17:52:05 +0800
Subject: [PATCH] HBASE-19942 Fix flaky TestSimpleRpcScheduler

---
 .../src/main/java/org/apache/hadoop/hbase/ipc/RpcExecutor.java      | 6 +++---
 .../java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java    | 2 ++
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcExecutor.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcExecutor.java
index 5572725..e49f576 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcExecutor.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/ipc/RpcExecutor.java
@@ -145,9 +145,9 @@ public abstract class RpcExecutor {
       queueClass = LinkedBlockingQueue.class;
     }
 
-    LOG.info("RpcExecutor " + name + " using " + callQueueType
-        + " as call queue; numCallQueues=" + numCallQueues + "; maxQueueLength=" + maxQueueLength
-        + "; handlerCount=" + handlerCount);
+    LOG.info("RpcExecutor " + this.name + " using " + this.queueClass
+        + " as call queue; numCallQueues=" + this.numCallQueues + "; maxQueueLength="
+        + maxQueueLength + "; handlerCount=" + this.handlerCount);
   }
 
   protected int computeNumCallQueues(final int handlerCount, final float callQueuesHandlersFactor) {
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java
index 875223d..3fab7fb 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/ipc/TestSimpleRpcScheduler.java
@@ -428,6 +428,8 @@ public class TestSimpleRpcScheduler {
 
     schedConf.setInt(HConstants.REGION_SERVER_HANDLER_COUNT, 0);
     schedConf.setInt("hbase.ipc.server.max.callqueue.length", 5);
+    schedConf.set(RpcExecutor.CALL_QUEUE_TYPE_CONF_KEY,
+      RpcExecutor.CALL_QUEUE_TYPE_DEADLINE_CONF_VALUE);
 
     PriorityFunction priority = mock(PriorityFunction.class);
     when(priority.getPriority(any(), any(), any())).thenReturn(HConstants.NORMAL_QOS);
-- 
1.9.1
