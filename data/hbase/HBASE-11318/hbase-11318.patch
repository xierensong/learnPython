diff --git hbase-client/src/main/java/org/apache/hadoop/hbase/security/AuthMethod.java hbase-client/src/main/java/org/apache/hadoop/hbase/security/AuthMethod.java
index c223fa5..887d46e 100644
--- hbase-client/src/main/java/org/apache/hadoop/hbase/security/AuthMethod.java
+++ hbase-client/src/main/java/org/apache/hadoop/hbase/security/AuthMethod.java
@@ -19,6 +19,7 @@
 
 package org.apache.hadoop.hbase.security;
 
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.security.UserGroupInformation;
 
 import java.io.DataInput;
@@ -26,6 +27,7 @@ import java.io.DataOutput;
 import java.io.IOException;
 
 /** Authentication method */
+@InterfaceAudience.Private
 public enum AuthMethod {
   SIMPLE((byte) 80, "", UserGroupInformation.AuthenticationMethod.SIMPLE),
   KERBEROS((byte) 81, "GSSAPI", UserGroupInformation.AuthenticationMethod.KERBEROS),
diff --git hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java
index 95cac0e..48947da 100644
--- hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java
+++ hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java
@@ -20,6 +20,7 @@ package org.apache.hadoop.hbase.security;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.io.WritableUtils;
 import org.apache.hadoop.ipc.RemoteException;
 import org.apache.hadoop.security.SaslInputStream;
@@ -52,6 +53,7 @@ import com.google.common.annotations.VisibleForTesting;
  * A utility class that encapsulates SASL logic for RPC client.
  * Copied from <code>org.apache.hadoop.security</code>
  */
+@InterfaceAudience.Private
 public class HBaseSaslRpcClient {
   public static final Log LOG = LogFactory.getLog(HBaseSaslRpcClient.class);
 
diff --git hbase-client/src/main/java/org/apache/hadoop/hbase/security/SaslStatus.java hbase-client/src/main/java/org/apache/hadoop/hbase/security/SaslStatus.java
index 95ac453..9cfb5cb 100644
--- hbase-client/src/main/java/org/apache/hadoop/hbase/security/SaslStatus.java
+++ hbase-client/src/main/java/org/apache/hadoop/hbase/security/SaslStatus.java
@@ -19,6 +19,9 @@
 
 package org.apache.hadoop.hbase.security;
 
+import org.apache.hadoop.classification.InterfaceAudience;
+
+@InterfaceAudience.Private
 public enum SaslStatus {
   SUCCESS (0),
   ERROR (1);
diff --git hbase-client/src/main/java/org/apache/hadoop/hbase/security/SaslUtil.java hbase-client/src/main/java/org/apache/hadoop/hbase/security/SaslUtil.java
index 351052b..2f93329 100644
--- hbase-client/src/main/java/org/apache/hadoop/hbase/security/SaslUtil.java
+++ hbase-client/src/main/java/org/apache/hadoop/hbase/security/SaslUtil.java
@@ -19,12 +19,14 @@
 package org.apache.hadoop.hbase.security;
 
 import org.apache.commons.codec.binary.Base64;
+import org.apache.hadoop.classification.InterfaceAudience;
 
 import java.util.Map;
 import java.util.TreeMap;
 
 import javax.security.sasl.Sasl;
 
+@InterfaceAudience.Private
 public class SaslUtil {
   public static final String SASL_DEFAULT_REALM = "default";
   public static final Map<String, String> SASL_PROPS =
diff --git hbase-client/src/main/java/org/apache/hadoop/hbase/security/SecureBulkLoadUtil.java hbase-client/src/main/java/org/apache/hadoop/hbase/security/SecureBulkLoadUtil.java
index 41b5cb9..75ab68e 100644
--- hbase-client/src/main/java/org/apache/hadoop/hbase/security/SecureBulkLoadUtil.java
+++ hbase-client/src/main/java/org/apache/hadoop/hbase/security/SecureBulkLoadUtil.java
@@ -18,10 +18,12 @@
  */
 package org.apache.hadoop.hbase.security;
 
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.hbase.util.Bytes;
 
+@InterfaceAudience.Private
 public class SecureBulkLoadUtil {
   private final static String BULKLOAD_STAGING_DIR = "hbase.bulkload.staging.dir";
 
diff --git hbase-client/src/main/java/org/apache/hadoop/hbase/security/SecurityInfo.java hbase-client/src/main/java/org/apache/hadoop/hbase/security/SecurityInfo.java
index 0dbcd42..9f0f150 100644
--- hbase-client/src/main/java/org/apache/hadoop/hbase/security/SecurityInfo.java
+++ hbase-client/src/main/java/org/apache/hadoop/hbase/security/SecurityInfo.java
@@ -20,6 +20,7 @@ package org.apache.hadoop.hbase.security;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentMap;
 
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.hbase.protobuf.generated.AdminProtos;
 import org.apache.hadoop.hbase.protobuf.generated.AuthenticationProtos.TokenIdentifier.Kind;
 import org.apache.hadoop.hbase.protobuf.generated.ClientProtos;
@@ -29,6 +30,7 @@ import org.apache.hadoop.hbase.protobuf.generated.RegionServerStatusProtos;
 /**
  * Maps RPC protocol interfaces to required configuration
  */
+@InterfaceAudience.Private
 public class SecurityInfo {
   /** Maps RPC service names to authentication information */
   private static ConcurrentMap<String,SecurityInfo> infos = new ConcurrentHashMap<String,SecurityInfo>();
diff --git hbase-client/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java hbase-client/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java
index 3082526..9c95888 100644
--- hbase-client/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java
+++ hbase-client/src/main/java/org/apache/hadoop/hbase/security/access/Permission.java
@@ -21,6 +21,8 @@ package org.apache.hadoop.hbase.security.access;
 import com.google.common.collect.Maps;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.classification.InterfaceAudience;
+import org.apache.hadoop.classification.InterfaceStability;
 import org.apache.hadoop.hbase.util.Bytes;
 import org.apache.hadoop.io.VersionedWritable;
 
@@ -36,6 +38,8 @@ import java.util.Map;
  *
  * @see TablePermission
  */
+@InterfaceAudience.Public
+@InterfaceStability.Evolving
 public class Permission extends VersionedWritable {
   protected static final byte VERSION = 0;
   public enum Action {
diff --git hbase-client/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java hbase-client/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java
index 944ebb1..e38458f 100644
--- hbase-client/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java
+++ hbase-client/src/main/java/org/apache/hadoop/hbase/security/access/TablePermission.java
@@ -20,6 +20,7 @@ package org.apache.hadoop.hbase.security.access;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.hbase.TableName;
 import org.apache.hadoop.hbase.KeyValue;
 import org.apache.hadoop.hbase.util.Bytes;
@@ -34,6 +35,7 @@ import java.io.IOException;
  * given table.  If the family property is <code>null</code>, it implies
  * full table access.
  */
+@InterfaceAudience.Private
 public class TablePermission extends Permission {
   private static Log LOG = LogFactory.getLog(TablePermission.class);
 
diff --git hbase-client/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java hbase-client/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java
index eaaa824..fc26eb1 100644
--- hbase-client/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java
+++ hbase-client/src/main/java/org/apache/hadoop/hbase/security/access/UserPermission.java
@@ -20,6 +20,7 @@ package org.apache.hadoop.hbase.security.access;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.hbase.TableName;
 import org.apache.hadoop.hbase.util.Bytes;
 
@@ -31,6 +32,7 @@ import java.io.IOException;
  * Represents an authorization for access over the given table, column family
  * plus qualifier, for the given user.
  */
+@InterfaceAudience.Private
 public class UserPermission extends TablePermission {
   private static Log LOG = LogFactory.getLog(UserPermission.class);
 
diff --git hbase-client/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationTokenIdentifier.java hbase-client/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationTokenIdentifier.java
index 1445e04..b6868d8 100644
--- hbase-client/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationTokenIdentifier.java
+++ hbase-client/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationTokenIdentifier.java
@@ -19,6 +19,7 @@
 package org.apache.hadoop.hbase.security.token;
 
 import com.google.protobuf.ByteString;
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.hbase.protobuf.generated.AuthenticationProtos;
 import org.apache.hadoop.io.Text;
 import org.apache.hadoop.security.UserGroupInformation;
@@ -31,6 +32,7 @@ import java.io.IOException;
 /**
  * Represents the identity information stored in an HBase authentication token.
  */
+@InterfaceAudience.Private
 public class AuthenticationTokenIdentifier extends TokenIdentifier {
   public static final Text AUTH_TOKEN_TYPE = new Text("HBASE_AUTH_TOKEN");
 
diff --git hbase-client/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationTokenSelector.java hbase-client/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationTokenSelector.java
index 53e8fb7..83133cd 100644
--- hbase-client/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationTokenSelector.java
+++ hbase-client/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationTokenSelector.java
@@ -20,6 +20,7 @@ package org.apache.hadoop.hbase.security.token;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.io.Text;
 import org.apache.hadoop.security.token.Token;
 import org.apache.hadoop.security.token.TokenIdentifier;
@@ -27,6 +28,7 @@ import org.apache.hadoop.security.token.TokenSelector;
 
 import java.util.Collection;
 
+@InterfaceAudience.Private
 public class AuthenticationTokenSelector
     implements TokenSelector<AuthenticationTokenIdentifier> {
   private static Log LOG = LogFactory.getLog(AuthenticationTokenSelector.class);
diff --git hbase-common/src/main/java/org/apache/hadoop/hbase/security/UserProvider.java hbase-common/src/main/java/org/apache/hadoop/hbase/security/UserProvider.java
index 9d04f3a..fb1ad67 100644
--- hbase-common/src/main/java/org/apache/hadoop/hbase/security/UserProvider.java
+++ hbase-common/src/main/java/org/apache/hadoop/hbase/security/UserProvider.java
@@ -27,6 +27,7 @@ import org.apache.hadoop.util.ReflectionUtils;
 /**
  * Provide an instance of a user. Allows custom {@link User} creation.
  */
+
 public class UserProvider extends BaseConfigurable {
 
   private static final String USER_PROVIDER_CONF_KEY = "hbase.client.userprovider.class";
diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/security/HBasePolicyProvider.java hbase-server/src/main/java/org/apache/hadoop/hbase/security/HBasePolicyProvider.java
index f151f58..f20079d 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/security/HBasePolicyProvider.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/security/HBasePolicyProvider.java
@@ -17,6 +17,7 @@
  */
 package org.apache.hadoop.hbase.security;
 
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.AdminService;
 import org.apache.hadoop.hbase.protobuf.generated.ClientProtos.ClientService;
@@ -31,6 +32,7 @@ import org.apache.hadoop.security.authorize.ServiceAuthorizationManager;
  * Implementation of secure Hadoop policy provider for mapping
  * protocol interfaces to hbase-policy.xml entries.
  */
+@InterfaceAudience.Private
 public class HBasePolicyProvider extends PolicyProvider {
   protected final static Service[] services = {
       new Service("security.client.protocol.acl", ClientService.BlockingInterface.class),
diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcServer.java hbase-server/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcServer.java
index 2dd94d6..3e44f45 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcServer.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcServer.java
@@ -32,6 +32,7 @@ import javax.security.sasl.RealmCallback;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hbase.ipc.RpcServer;
 import org.apache.hadoop.hbase.security.SaslUtil.QualityOfProtection;
@@ -43,6 +44,7 @@ import org.apache.hadoop.security.token.SecretManager.InvalidToken;
 /**
  * A utility class for dealing with SASL on RPC server
  */
+@InterfaceAudience.Private
 public class HBaseSaslRpcServer {
   public static final Log LOG = LogFactory.getLog(HBaseSaslRpcServer.class);
 
diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java
index bec1030..680bac1 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlFilter.java
@@ -21,6 +21,7 @@ package org.apache.hadoop.hbase.security.access;
 import java.io.IOException;
 import java.util.Map;
 
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.hbase.Cell;
 import org.apache.hadoop.hbase.CellUtil;
 import org.apache.hadoop.hbase.TableName;
@@ -46,6 +47,7 @@ import org.apache.hadoop.hbase.util.SimpleByteRange;
  * access succeeds, then there is no need to impose the overhead of this filter.
  * </p>
  */
+@InterfaceAudience.Private
 class AccessControlFilter extends FilterBase {
 
   public static enum Strategy {
diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java
index 8baa34b..6030d81 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessControlLists.java
@@ -33,6 +33,7 @@ import java.util.TreeSet;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hbase.Cell;
 import org.apache.hadoop.hbase.CellUtil;
@@ -94,6 +95,7 @@ import com.google.protobuf.InvalidProtocolBufferException;
  * org.apache.hadoop.hbase.security.access.TablePermission.Action enum.
  * </p>
  */
+@InterfaceAudience.Private
 public class AccessControlLists {
   /** Internal storage table for access control lists */
   public static final TableName ACL_TABLE_NAME =
diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java
index e2eadc1..c3c944b 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/AccessController.java
@@ -29,6 +29,7 @@ import java.util.TreeSet;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hbase.Cell;
 import org.apache.hadoop.hbase.CellUtil;
@@ -143,6 +144,7 @@ import com.google.protobuf.Service;
  * commands.
  * </p>
  */
+@InterfaceAudience.Private
 public class AccessController extends BaseRegionObserver
     implements MasterObserver, RegionServerObserver,
       AccessControlService.Interface, CoprocessorService, EndpointObserver {
diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java
index 394d8c1..8b0bb69 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/TableAuthManager.java
@@ -26,6 +26,7 @@ import java.util.concurrent.ConcurrentSkipListMap;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hbase.Cell;
 import org.apache.hadoop.hbase.TableName;
@@ -43,6 +44,7 @@ import com.google.common.collect.Lists;
 /**
  * Performs authorization checks for a given user's assigned permissions
  */
+@InterfaceAudience.Private
 public class TableAuthManager {
   private static class PermissionCache<T extends Permission> {
     /** Cache of user permissions */
diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java
index ccec446..380bd73 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java
@@ -20,6 +20,7 @@ package org.apache.hadoop.hbase.security.access;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hbase.TableName;
 import org.apache.hadoop.hbase.util.Bytes;
@@ -40,6 +41,7 @@ import java.util.List;
  * instances on all other cluster hosts watch the znodes for updates, which
  * trigger updates in the {@link TableAuthManager} permission cache.
  */
+@InterfaceAudience.Private
 public class ZKPermissionWatcher extends ZooKeeperListener {
   private static Log LOG = LogFactory.getLog(ZKPermissionWatcher.class);
   // parent node for permissions lists
diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationKey.java hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationKey.java
index c68af4e..296ac57 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationKey.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationKey.java
@@ -23,6 +23,7 @@ import java.io.DataInput;
 import java.io.DataOutput;
 import java.io.IOException;
 
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.hbase.util.Bytes;
 import org.apache.hadoop.io.Writable;
 import org.apache.hadoop.io.WritableUtils;
@@ -31,6 +32,7 @@ import org.apache.hadoop.io.WritableUtils;
  * Represents a secret key used for signing and verifying authentication tokens
  * by {@link AuthenticationTokenSecretManager}.
  */
+@InterfaceAudience.Private
 public class AuthenticationKey implements Writable {
   private int id;
   private long expirationDate;
diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationTokenSecretManager.java hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationTokenSecretManager.java
index 5985be6..2892c51 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationTokenSecretManager.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/AuthenticationTokenSecretManager.java
@@ -27,6 +27,7 @@ import java.util.concurrent.atomic.AtomicLong;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hbase.Stoppable;
 import org.apache.hadoop.hbase.util.Bytes;
@@ -54,6 +55,7 @@ import org.apache.zookeeper.KeeperException;
  * are no longer needed (as any tokens using them have expired).
  * </p>
  */
+@InterfaceAudience.Private
 public class AuthenticationTokenSecretManager
     extends SecretManager<AuthenticationTokenIdentifier> {
 
diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/TokenProvider.java hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/TokenProvider.java
index af405d3..a632397 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/TokenProvider.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/TokenProvider.java
@@ -25,6 +25,7 @@ import com.google.protobuf.RpcController;
 import com.google.protobuf.Service;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.hbase.Coprocessor;
 import org.apache.hadoop.hbase.CoprocessorEnvironment;
 import org.apache.hadoop.hbase.coprocessor.CoprocessorService;
@@ -46,6 +47,7 @@ import org.apache.hadoop.security.token.Token;
  * Provides a service for obtaining authentication tokens via the
  * {@link AuthenticationProtos} AuthenticationService coprocessor service.
  */
+@InterfaceAudience.Private
 public class TokenProvider implements AuthenticationProtos.AuthenticationService.Interface,
     Coprocessor, CoprocessorService {
 
diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/TokenUtil.java hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/TokenUtil.java
index b7b8db6..cdc824d 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/TokenUtil.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/TokenUtil.java
@@ -25,6 +25,7 @@ import java.security.PrivilegedExceptionAction;
 import com.google.protobuf.ServiceException;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hbase.HConstants;
 import org.apache.hadoop.hbase.TableName;
@@ -41,6 +42,7 @@ import org.apache.hadoop.security.token.Token;
 /**
  * Utility methods for obtaining authentication tokens.
  */
+@InterfaceAudience.Private
 public class TokenUtil {
   private static Log LOG = LogFactory.getLog(TokenUtil.class);
 
diff --git hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/ZKSecretWatcher.java hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/ZKSecretWatcher.java
index d780d50..41633b8 100644
--- hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/ZKSecretWatcher.java
+++ hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/ZKSecretWatcher.java
@@ -23,6 +23,7 @@ import java.util.List;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hbase.util.Writables;
 import org.apache.hadoop.hbase.zookeeper.ZKUtil;
@@ -33,6 +34,7 @@ import org.apache.zookeeper.KeeperException;
 /**
  * Synchronizes token encryption keys across cluster nodes.
  */
+@InterfaceAudience.Private
 public class ZKSecretWatcher extends ZooKeeperListener {
   private static final String DEFAULT_ROOT_NODE = "tokenauth";
   private static final String DEFAULT_KEYS_PARENT = "keys";
diff --git hbase-server/src/test/java/org/apache/hadoop/hbase/security/HBaseKerberosUtils.java hbase-server/src/test/java/org/apache/hadoop/hbase/security/HBaseKerberosUtils.java
index 27198b3..01099b7 100644
--- hbase-server/src/test/java/org/apache/hadoop/hbase/security/HBaseKerberosUtils.java
+++ hbase-server/src/test/java/org/apache/hadoop/hbase/security/HBaseKerberosUtils.java
@@ -17,12 +17,14 @@
  */
 package org.apache.hadoop.hbase.security;
 
+import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.CommonConfigurationKeys;
 import org.apache.hadoop.hbase.HBaseConfiguration;
 
 import com.google.common.base.Strings;
 
+@InterfaceAudience.Private
 class HBaseKerberosUtils {
   public static final String KRB_PRINCIPAL = "hbase.regionserver.kerberos.principal";
   public static final String KRB_KEYTAB_FILE = "hbase.regionserver.keytab.file";
