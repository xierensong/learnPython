From 34257115142bbd08dc0946a68efee13c79a7b56a Mon Sep 17 00:00:00 2001
From: zhangduo <zhangduo@apache.org>
Date: Tue, 6 Feb 2018 09:54:42 +0800
Subject: [PATCH] HBASE-19927 Addendum join on RegionServerThread instead of
 HRegionServer

---
 .../test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java    | 3 +--
 .../java/org/apache/hadoop/hbase/TestFullLogReconstruction.java   | 8 +++++---
 2 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
index ecd2fa5..4f55199 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
@@ -2635,11 +2635,10 @@ public class HBaseTestingUtility extends HBaseZKTestingUtility {
    * Expire a region server's session
    * @param index which RS
    */
-  public HRegionServer expireRegionServerSession(int index) throws Exception {
+  public void expireRegionServerSession(int index) throws Exception {
     HRegionServer rs = getMiniHBaseCluster().getRegionServer(index);
     expireSession(rs.getZooKeeper(), false);
     decrementMinRegionServerCount();
-    return rs;
   }
 
   private void decrementMinRegionServerCount() {
diff --git a/hbase-server/src/test/java/org/apache/hadoop/hbase/TestFullLogReconstruction.java b/hbase-server/src/test/java/org/apache/hadoop/hbase/TestFullLogReconstruction.java
index 13c616f..9adc050 100644
--- a/hbase-server/src/test/java/org/apache/hadoop/hbase/TestFullLogReconstruction.java
+++ b/hbase-server/src/test/java/org/apache/hadoop/hbase/TestFullLogReconstruction.java
@@ -26,6 +26,7 @@ import org.apache.hadoop.hbase.regionserver.HRegionServer;
 import org.apache.hadoop.hbase.testclassification.LargeTests;
 import org.apache.hadoop.hbase.testclassification.MiscTests;
 import org.apache.hadoop.hbase.util.Bytes;
+import org.apache.hadoop.hbase.util.JVMClusterUtil.RegionServerThread;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.ClassRule;
@@ -81,19 +82,20 @@ public class TestFullLogReconstruction {
     for (int i = 0; i < 4; i++) {
       TEST_UTIL.loadTable(table, FAMILY);
     }
-    HRegionServer rs = TEST_UTIL.expireRegionServerSession(0);
+    RegionServerThread rsThread = TEST_UTIL.getHBaseCluster().getRegionServerThreads().get(0);
+    TEST_UTIL.expireRegionServerSession(0);
     // make sure that the RS is fully down before reading, so that we will read the data from other
     // RSes.
     TEST_UTIL.waitFor(30000, new ExplainingPredicate<Exception>() {
 
       @Override
       public boolean evaluate() throws Exception {
-        return !rs.isAlive();
+        return !rsThread.isAlive();
       }
 
       @Override
       public String explainFailure() throws Exception {
-        return rs + " is still alive";
+        return rsThread.getRegionServer() + " is still alive";
       }
     });
 
-- 
2.7.4

