From 3c0ad6c2cd6d49bc0401327d3ccf6b9c3cf1a439 Mon Sep 17 00:00:00 2001
From: Apekshit Sharma <appy@apache.org>
Date: Fri, 11 May 2018 02:07:05 -0700
Subject: [PATCH] HBASE-20594 Provide utility to get table desc delta

Ammending Author: Mike Drob <mdrob@apache.org>
---
 .../src/main/resources/hbase/checkstyle.xml        |  1 +
 .../hadoop/hbase/client/TableDescriptorUtils.java  | 87 ++++++++++++++++++++++
 .../hbase/client/TestTableDescriptorUtils.java     | 79 ++++++++++++++++++++
 3 files changed, 167 insertions(+)
 create mode 100644 hbase-client/src/main/java/org/apache/hadoop/hbase/client/TableDescriptorUtils.java
 create mode 100644 hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestTableDescriptorUtils.java

diff --git a/hbase-checkstyle/src/main/resources/hbase/checkstyle.xml b/hbase-checkstyle/src/main/resources/hbase/checkstyle.xml
index 5b6f41fd1a..b61e79ba7c 100644
--- a/hbase-checkstyle/src/main/resources/hbase/checkstyle.xml
+++ b/hbase-checkstyle/src/main/resources/hbase/checkstyle.xml
@@ -51,6 +51,7 @@
     <module name="VisibilityModifier">
       <property name="packageAllowed" value="true"/>
       <property name="protectedAllowed" value="true"/>
+      <property name="allowPublicImmutableFields" value="true"/>
     </module>
 
     <!-- Coding Checks
diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/TableDescriptorUtils.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/TableDescriptorUtils.java
new file mode 100644
index 0000000000..dc704057ab
--- /dev/null
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/TableDescriptorUtils.java
@@ -0,0 +1,87 @@
+/**
+ *
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.hadoop.hbase.client;
+
+import java.util.Map;
+import java.util.Set;
+import java.util.TreeMap;
+import java.util.TreeSet;
+
+import org.apache.hadoop.hbase.util.Bytes;
+import org.apache.hbase.thirdparty.com.google.common.collect.ImmutableSet;
+import org.apache.yetus.audience.InterfaceAudience;
+
+import org.apache.hbase.thirdparty.com.google.common.base.Preconditions;
+
+@InterfaceAudience.Public
+public final class TableDescriptorUtils {
+  public final static class TableDescriptorDelta {
+    public final Set<byte[]> columnsAdded;
+    public final Set<byte[]> columnsDeleted;
+    public final Set<byte[]> columnsModified;
+
+    public TableDescriptorDelta(Set<byte[]> added, Set<byte[]> deleted, Set<byte[]> modified) {
+      columnsAdded = ImmutableSet.copyOf(added);
+      columnsDeleted = ImmutableSet.copyOf(deleted);
+      columnsModified = ImmutableSet.copyOf(modified);
+    }
+  }
+
+  private TableDescriptorUtils() { }
+
+  /**
+   * Compares two {@link TableDescriptor} and indicate which columns were added, deleted,
+   * or modified from oldTD to newTD
+   * @return a TableDescriptorDelta that contains the added/deleted/modified column names
+   */
+  public static TableDescriptorDelta computeDelta(TableDescriptor oldTD, TableDescriptor newTD) {
+    Preconditions.checkNotNull(oldTD);
+    Preconditions.checkNotNull(newTD);
+
+    Map<byte[], ColumnFamilyDescriptor> oldCFs = new TreeMap<>(Bytes.BYTES_COMPARATOR);
+    Set<byte[]> newCFs = new TreeSet<>(Bytes.BYTES_COMPARATOR);
+
+    // CFD -> (name, CFD)
+    for (ColumnFamilyDescriptor cfd : oldTD.getColumnFamilies()) {
+      oldCFs.put(cfd.getName(), cfd);
+    }
+
+    Set<byte[]> added = new TreeSet<>(Bytes.BYTES_COMPARATOR);
+    Set<byte[]> modified = new TreeSet<>(Bytes.BYTES_COMPARATOR);;
+
+    for (ColumnFamilyDescriptor cfd : newTD.getColumnFamilies()) {
+      byte[] cfName = cfd.getName();
+      newCFs.add(cfName);
+
+      if (!oldCFs.containsKey(cfName)) {
+        // If column family is in newTD but not oldTD, then it was added
+        added.add(cfName);
+      } else if (!cfd.equals(oldCFs.get(cfName))) {
+        // If column family is in both, but not equal, then it was modified
+        modified.add(cfName);
+      }
+    }
+
+    // If column family is in oldTD, but not in newTD, then it got deleted.
+    Set<byte[]> deleted = oldCFs.keySet();
+    deleted.removeAll(newCFs);
+
+    return new TableDescriptorDelta(added, deleted, modified);
+  }
+}
diff --git a/hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestTableDescriptorUtils.java b/hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestTableDescriptorUtils.java
new file mode 100644
index 0000000000..9f1090eeaa
--- /dev/null
+++ b/hbase-client/src/test/java/org/apache/hadoop/hbase/client/TestTableDescriptorUtils.java
@@ -0,0 +1,79 @@
+/**
+ *
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.hadoop.hbase.client;
+
+import static org.junit.Assert.assertEquals;
+
+import java.util.Arrays;
+
+import org.apache.hadoop.hbase.HBaseClassTestRule;
+import org.apache.hadoop.hbase.client.TableDescriptorUtils.TableDescriptorDelta;
+import org.apache.hadoop.hbase.TableName;
+import org.apache.hadoop.hbase.testclassification.SmallTests;
+import org.apache.hadoop.hbase.util.Bytes;
+import org.junit.ClassRule;
+import org.junit.Test;
+import org.junit.experimental.categories.Category;
+
+@Category(SmallTests.class)
+public class TestTableDescriptorUtils {
+  @ClassRule
+  public static final HBaseClassTestRule CLASS_RULE =
+      HBaseClassTestRule.forClass(TestTableDescriptorUtils.class);
+
+  @Test
+  public void testDelta() {
+    ColumnFamilyDescriptor cf1 = ColumnFamilyDescriptorBuilder.of("cf1");
+    ColumnFamilyDescriptor cf2 = ColumnFamilyDescriptorBuilder.of("cf2");
+    ColumnFamilyDescriptor cf3 = ColumnFamilyDescriptorBuilder.of("cf3");
+    ColumnFamilyDescriptor cf4 = ColumnFamilyDescriptorBuilder.of("cf4");
+    TableDescriptor td = TableDescriptorBuilder
+        .newBuilder(TableName.valueOf("test"))
+        .setColumnFamilies(Arrays.asList(cf1, cf2, cf3, cf4))
+        .build();
+
+    TableDescriptorDelta selfCompare = TableDescriptorUtils.computeDelta(td, td);
+    assertEquals(0, selfCompare.columnsAdded.size());
+    assertEquals(0, selfCompare.columnsDeleted.size());
+    assertEquals(0, selfCompare.columnsModified.size());
+
+    ColumnFamilyDescriptor modCf2 = ColumnFamilyDescriptorBuilder
+        .newBuilder(cf2).setMaxVersions(5).build();
+    ColumnFamilyDescriptor modCf3 = ColumnFamilyDescriptorBuilder
+        .newBuilder(cf3).setMaxVersions(5).build();
+    ColumnFamilyDescriptor cf5 = ColumnFamilyDescriptorBuilder.of("cf5");
+    ColumnFamilyDescriptor cf6 = ColumnFamilyDescriptorBuilder.of("cf6");
+    ColumnFamilyDescriptor cf7 = ColumnFamilyDescriptorBuilder.of("cf7");
+    TableDescriptor newTd = TableDescriptorBuilder
+        .newBuilder(td)
+        .removeColumnFamily(Bytes.toBytes("cf1"))
+        .modifyColumnFamily(modCf2)
+        .modifyColumnFamily(modCf3)
+        .setColumnFamily(cf5)
+        .setColumnFamily(cf6)
+        .setColumnFamily(cf7)
+        .build();
+
+    TableDescriptorDelta delta = TableDescriptorUtils.computeDelta(td, newTd);
+
+    assertEquals(3, delta.columnsAdded.size());
+    assertEquals(1, delta.columnsDeleted.size());
+    assertEquals(2, delta.columnsModified.size());
+  }
+}
-- 
2.16.1

