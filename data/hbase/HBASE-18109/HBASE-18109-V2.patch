From 8f266f5fe3bce460a7d14bcbbdaf9fa25135d09e Mon Sep 17 00:00:00 2001
From: Yi Liang <yliang@us.ibm.com>
Date: Wed, 7 Jun 2017 12:37:41 -0700
Subject: [PATCH] HBASE-18109: Assign system tables first

---
 .../hbase/master/assignment/AssignmentManager.java | 23 +++++++++++++++++++++-
 .../master/procedure/ServerCrashProcedure.java     |  5 +++--
 2 files changed, 25 insertions(+), 3 deletions(-)

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java
index c10111f..a7fb743 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java
@@ -1169,7 +1169,7 @@ public class AssignmentManager implements ServerListener {
 
     // assign offline regions
     st = System.currentTimeMillis();
-    for (HRegionInfo regionInfo: regionsToAssign) {
+    for (HRegionInfo regionInfo: getOrderedRegions(regionsToAssign)) {
       master.getMasterProcedureExecutor().submitProcedure(
         createAssignProcedure(regionInfo, false));
     }
@@ -1277,6 +1277,27 @@ public class AssignmentManager implements ServerListener {
     return new Pair<Integer, Integer>(ritCount, states.size());
   }
 
+  /**
+   * Used when assign regions, this method will put system regions in
+   * front of user regions
+   * @param regions
+   * @return A list of regions with system regions at front
+   */
+  public List<HRegionInfo> getOrderedRegions(
+      final List<HRegionInfo> regions) {
+    if (regions == null) return Collections.emptyList();
+
+    List<HRegionInfo> systemList = new ArrayList<>();
+    List<HRegionInfo> userList = new ArrayList<>();
+    for (HRegionInfo hri : regions) {
+      if (hri.isSystemTable()) systemList.add(hri);
+      else userList.add(hri);
+    }
+    // Append userList to systemList
+    systemList.addAll(userList);
+    return systemList;
+  }
+
   // ============================================================================================
   //  TODO: Region State In Transition
   // ============================================================================================
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/ServerCrashProcedure.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/ServerCrashProcedure.java
index e0f0dbe..c6cd861 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/ServerCrashProcedure.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/ServerCrashProcedure.java
@@ -186,8 +186,9 @@ implements ServerProcedureInterface {
               "; cycles=" + this.cycles);
           }
           handleRIT(env, regionsOnCrashedServer);
-          addChildProcedure(env.getAssignmentManager().
-              createAssignProcedures(regionsOnCrashedServer, true));
+          AssignmentManager am = env.getAssignmentManager();
+          addChildProcedure(am.
+              createAssignProcedures(am.getOrderedRegions(regionsOnCrashedServer), true));
         }
         setNextState(ServerCrashState.SERVER_CRASH_FINISH);
         break;
-- 
2.10.1

