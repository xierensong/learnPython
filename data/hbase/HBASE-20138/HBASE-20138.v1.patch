From c9f9b539b7eac4387ee5509640a377d0142b0300 Mon Sep 17 00:00:00 2001
From: huzheng <openinx@gmail.com>
Date: Tue, 20 Mar 2018 15:15:02 +0800
Subject: [PATCH] HBASE-20138 Find a way to deal with the conflicts when
 updating replication position

---
 .../hbase/replication/ZKReplicationQueueStorage.java  | 19 ++++++++++++-------
 .../hbase/replication/TestReplicationStateBasic.java  |  6 ++++++
 2 files changed, 18 insertions(+), 7 deletions(-)

diff --git a/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ZKReplicationQueueStorage.java b/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ZKReplicationQueueStorage.java
index 5a2b508..38c54ad 100644
--- a/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ZKReplicationQueueStorage.java
+++ b/hbase-replication/src/main/java/org/apache/hadoop/hbase/replication/ZKReplicationQueueStorage.java
@@ -202,13 +202,18 @@ class ZKReplicationQueueStorage extends ZKReplicationStorageBase
       for (Entry<String, Long> lastSeqEntry : lastSeqIds.entrySet()) {
         String peerId = new ReplicationQueueInfo(queueId).getPeerId();
         String path = getSerialReplicationRegionPeerNode(lastSeqEntry.getKey(), peerId);
-        /*
-         * Make sure the existence of path
-         * /hbase/replication/regions/<hash>/<encoded-region-name>-<peer-id>. As the javadoc in
-         * multiOrSequential() method said, if received a NodeExistsException, all operations will
-         * fail. So create the path here, and in fact, no need to add this operation to listOfOps,
-         * because only need to make sure that update file position and sequence id atomically.
-         */
+        long currentLastPushedSeqId = getLastSequenceId(lastSeqEntry.getKey(), peerId);
+        if (lastSeqEntry.getValue() <= currentLastPushedSeqId) {
+          // Just skip updating the last pushed seq id if current seq id <= the last pushed sequence
+          // id. DO NOT need CAS here, see HBASE-20138 for the reason.
+          continue;
+        }
+        // Make sure the existence of path
+        // /hbase/replication/regions/<hash0>/<hash1>/<encoded-region-name>-<peer-id>.
+        // As the javadoc in multiOrSequential() method said, if received a NodeExistsException, all
+        // operations will fail. So create the path here, and in fact, no need to add this operation
+        // to listOfOps, because only need to make sure that update file position and sequence id
+        // atomically.
         ZKUtil.createWithParents(zookeeper, path);
         // Persist the max sequence id of region to zookeeper.
         listOfOps.add(ZKUtilOp.setData(path, ZKUtil.positionToByteArray(lastSeqEntry.getValue())));
diff --git a/hbase-replication/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationStateBasic.java b/hbase-replication/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationStateBasic.java
index 21b09aa..b2a0555 100644
--- a/hbase-replication/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationStateBasic.java
+++ b/hbase-replication/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationStateBasic.java
@@ -315,6 +315,12 @@ public abstract class TestReplicationStateBasic {
     }
     assertEquals(900L, rqs.getLastSequenceId(region0, queue1));
     assertEquals(1000L, rqs.getLastSequenceId(region1, queue1));
+
+    // Try to decrease the last pushed id
+    rqs.setWALPosition(serverName1, queue1, getFileName("file1", 0), 11 * 100,
+      ImmutableMap.of(region0, 899L, region1, 1001L));
+    assertEquals(900L, rqs.getLastSequenceId(region0, queue1));
+    assertEquals(1001L, rqs.getLastSequenceId(region1, queue1));
   }
 
   protected void assertConnectedPeerStatus(boolean status, String peerId) throws Exception {
-- 
2.7.4

