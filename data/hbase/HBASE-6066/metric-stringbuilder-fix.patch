commit 16d080bfa41b76142a7c69619c8bd117f0f44e4c
Author: Todd Lipcon <todd@cloudera.com>
Date:   Sun May 6 12:17:30 2012 -0700

    Fix wasted CPU in StringBuilder.append

diff --git src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java
index 4aa36bd..ff46550 100644
--- src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java
+++ src/main/java/org/apache/hadoop/hbase/regionserver/StoreScanner.java
@@ -24,6 +24,7 @@ import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.NavigableSet;
+import java.util.concurrent.atomic.AtomicLong;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -342,6 +343,11 @@ class StoreScanner extends NonLazyKeyValueScanner
     if ((matcher.row == null) || !peeked.matchingRow(matcher.row)) {
       matcher.setRow(peeked.getRow());
     }
+    
+    AtomicLong metricLong = null;
+    if (metric != null) {
+      metricLong = RegionMetricsStorage.getNumericMetricRef(this.metricNamePrefix + metric);
+    }
 
     KeyValue kv;
     KeyValue prevKV = null;
@@ -371,9 +377,8 @@ class StoreScanner extends NonLazyKeyValueScanner
           }
           results.add(kv);
 
-          if (metric != null) {
-            RegionMetricsStorage.incrNumericMetric(this.metricNamePrefix + metric,
-                kv.getLength());
+          if (metricLong != null) {
+            metricLong.addAndGet(kv.getLength());
           }
 
           if (qcode == ScanQueryMatcher.MatchCode.INCLUDE_AND_SEEK_NEXT_ROW) {
diff --git src/main/java/org/apache/hadoop/hbase/regionserver/metrics/RegionMetricsStorage.java src/main/java/org/apache/hadoop/hbase/regionserver/metrics/RegionMetricsStorage.java
index 3239540..4e14a24 100644
--- src/main/java/org/apache/hadoop/hbase/regionserver/metrics/RegionMetricsStorage.java
+++ src/main/java/org/apache/hadoop/hbase/regionserver/metrics/RegionMetricsStorage.java
@@ -62,6 +62,14 @@ public class RegionMetricsStorage {
   public static Map<String, Pair<AtomicLong, AtomicInteger>> getTimeVaryingMetrics() {
     return timeVaryingMetrics;
   }
+  
+  public static AtomicLong getNumericMetricRef(String key) {
+    AtomicLong oldVal = numericMetrics.get(key);
+    if (oldVal == null) {
+      oldVal = numericMetrics.putIfAbsent(key, new AtomicLong());
+    }
+    return oldVal;
+  }
 
   public static void incrNumericMetric(String key, long amount) {
     AtomicLong oldVal = numericMetrics.get(key);
